/* 
 * Swagger Moodle - OpenAPI 3.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.11
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CourseApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CourseApiTests
    {
        private CourseApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CourseApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CourseApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CourseApi
            //Assert.IsInstanceOfType(typeof(CourseApi), instance, "instance is a CourseApi");
        }

        /// <summary>
        /// Test 4
        /// </summary>
        [Test]
        public void 4Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.4();
            
        }
        /// <summary>
        /// Test Addcourse
        /// </summary>
        [Test]
        public void AddcourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Courses body = null;
            //var response = instance.Addcourse(body);
            //Assert.IsInstanceOf<Courses> (response, "response is Courses");
        }
        /// <summary>
        /// Test FindCourseByName
        /// </summary>
        [Test]
        public void FindCourseByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tags = null;
            //var response = instance.FindCourseByName(tags);
            //Assert.IsInstanceOf<List<Courses>> (response, "response is List<Courses>");
        }
        /// <summary>
        /// Test FindCourseByStatus
        /// </summary>
        [Test]
        public void FindCourseByStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string status = null;
            //var response = instance.FindCourseByStatus(status);
            //Assert.IsInstanceOf<List<Courses>> (response, "response is List<Courses>");
        }
        /// <summary>
        /// Test UpdateCourse
        /// </summary>
        [Test]
        public void UpdateCourseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Courses body = null;
            //var response = instance.UpdateCourse(body);
            //Assert.IsInstanceOf<Courses> (response, "response is Courses");
        }
    }

}
